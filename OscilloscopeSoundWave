#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

// OLED display dimensions
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64

// I2C pins for OLED on ESP32-C3
#define SDA_PIN 7
#define SCL_PIN 6

// Sound sensor analog pin
#define SOUND_SENSOR_PIN 1 // ADC input

// Initialize the OLED display
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

void setup() {
  // Initialize Serial Monitor
  Serial.begin(115200);

  // Initialize I2C with custom pins
  Wire.begin(SDA_PIN, SCL_PIN);

  // Initialize the OLED display
  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("SSD1306 allocation failed"));
    while (true);
  }
  display.clearDisplay();
  display.display();

  // ADC configuration
  analogReadResolution(12); // 12-bit resolution
}

void loop() {
  static int waveData[SCREEN_WIDTH]; // Array to store waveform data

  // Shift existing data left
  for (int i = 0; i < SCREEN_WIDTH - 1; i++) {
    waveData[i] = waveData[i + 1];
  }

  // Read sound sensor value
  int sensorValue = analogRead(SOUND_SENSOR_PIN);

  // Map sensor value to screen height (with middle baseline)
  waveData[SCREEN_WIDTH - 1] = map(sensorValue, 0, 4095, 0, SCREEN_HEIGHT);

  // Clear the display
  display.clearDisplay();

  // Draw lighter grid (sparser or dashed)
  for (int y = 0; y < SCREEN_HEIGHT; y += 8) {
    for (int x = 0; x < SCREEN_WIDTH; x += 4) { // Dashed horizontal line
      display.drawPixel(x, y, SSD1306_WHITE);
    }
  }
  for (int x = 0; x < SCREEN_WIDTH; x += 16) {
    for (int y = 0; y < SCREEN_HEIGHT; y += 4) { // Dashed vertical line
      display.drawPixel(x, y, SSD1306_WHITE);
    }
  }

  // Draw the baseline
  display.drawFastHLine(0, SCREEN_HEIGHT / 2, SCREEN_WIDTH, SSD1306_WHITE);

  // Draw the waveform
  for (int i = 1; i < SCREEN_WIDTH; i++) {
    int y1 = SCREEN_HEIGHT - waveData[i - 1];
    int y2 = SCREEN_HEIGHT - waveData[i];

    display.drawLine(i - 1, y1, i, y2, SSD1306_WHITE);
  }

  // Show the display
  display.display();

  // Delay for smooth rendering
  delay(30);
}
